{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadsahilshaikh/Downloads/cloudcomputingproject/frontend/converterapp/src/CryptoCrypto.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CryptoCrypto = () => {\n  _s();\n  const [currency1, setCurrency1] = useState('BTC');\n  const [currency2, setCurrency2] = useState('ETH');\n  const [value1, setValue1] = useState('');\n  const [convertedValue, setConvertedValue] = useState('');\n  const [error, setError] = useState('');\n  const convert = async () => {\n    if (currency1 !== '' && currency2 !== '' && value1 !== '') {\n      try {\n        const response = await fetch(`http://localhost:5500/api/convert/cryptotocrypto/${currency1}/${currency2}/${value1}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.error);\n        }\n        setError('');\n        const result = await response.json();\n        setConvertedValue(result);\n      } catch (error) {\n        console.error('Error converting:', error.message);\n        setError(error.message);\n      }\n    } else {\n      setError('Please input all fields');\n      setConvertedValue('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Crypto to Crypto Currency Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: convert,\n          children: \"Convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red',\n            fontSize: '18px'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this) : convertedValue !== '' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '24px',\n              color: 'green',\n              marginBottom: '15px'\n            },\n            children: [value1, \" \", currency1, \" value in \", currency2, \" is \", convertedValue.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            style: {\n              color: 'blue'\n            },\n            children: [\"Data last updated on: \", convertedValue.lastUpdated]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n};\n_s(CryptoCrypto, \"v1t8s9hF2xFm+2RTpnWyJFrdfaY=\");\n_c = CryptoCrypto;\nexport default CryptoCrypto;\nvar _c;\n$RefreshReg$(_c, \"CryptoCrypto\");","map":{"version":3,"names":["CryptoCrypto","_s","currency1","setCurrency1","useState","currency2","setCurrency2","value1","setValue1","convertedValue","setConvertedValue","error","setError","convert","response","fetch","method","headers","ok","errorData","json","Error","result","console","message","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","fontSize","_Fragment","marginBottom","amount","lastUpdated","_c","$RefreshReg$"],"sources":["/Users/mohammadsahilshaikh/Downloads/cloudcomputingproject/frontend/converterapp/src/CryptoCrypto.js"],"sourcesContent":["const CryptoCrypto = () => {\n    const [currency1, setCurrency1] = useState('BTC');\n    const [currency2, setCurrency2] = useState('ETH');\n    const [value1, setValue1] = useState('');\n    const [convertedValue, setConvertedValue] = useState('');\n    const [error, setError] = useState('');\n  \n    const convert = async () => {\n      if (currency1 !== '' && currency2 !== '' && value1 !== '') {\n        try {\n          const response = await fetch(`http://localhost:5500/api/convert/cryptotocrypto/${currency1}/${currency2}/${value1}`, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          });\n  \n          if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(errorData.error);\n          }\n  \n          setError('');\n          const result = await response.json();\n          setConvertedValue(result);\n        } catch (error) {\n          console.error('Error converting:', error.message);\n          setError(error.message);\n        }\n      } else {\n        setError('Please input all fields');\n        setConvertedValue('');\n      }\n    };\n  \n    return (\n      <div className=\"container mt-5\">\n        <h1 className=\"text-center\">Crypto to Crypto Currency Converter</h1>\n        <div className=\"row\">\n          {/* ... (rest of the code remains the same) ... */}\n        </div>\n        <br />\n        <div>\n          <div className=\"d-flex justify-content-center\">\n            <button className=\"btn btn-primary\" onClick={convert}>\n              Convert\n            </button>\n          </div>\n          <br />\n          <div className=\"text-center\">\n            {error ? (\n              <div style={{ color: 'red', fontSize: '18px' }}>{error}</div>\n            ) : convertedValue !== '' ? (\n              <>\n                <div style={{ fontSize: '24px', color: 'green', marginBottom: '15px' }}>\n                  {value1} {currency1} value in {currency2} is {convertedValue.amount}\n                </div>\n                <small style={{ color: 'blue' }}>Data last updated on: {convertedValue.lastUpdated}</small>\n              </>\n            ) : (\n              ''\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n  \n  export default CryptoCrypto;\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}